"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../../../src/utils");
var config_1 = require("../../config");
var Structure = /** @class */ (function () {
    function Structure(wrapperFactory, node) {
        this.wrapperFactory = wrapperFactory;
        this.node = node;
    }
    Structure.prototype.getName = function () {
        return this.node.getName();
    };
    Structure.prototype.getFilePath = function () {
        return this.node.getSourceFile().getFilePath();
    };
    Structure.prototype.isOverloadStructure = function () {
        return config_1.isOverloadStructure(this.getName());
    };
    Structure.prototype.getBaseStructures = function () {
        var _this = this;
        return this.node.getBaseDeclarations().map(function (d) {
            if (!utils_1.TypeGuards.isInterfaceDeclaration(d))
                throw new Error("Unexpected kind: " + d.getKindName());
            return _this.wrapperFactory.getStructure(d);
        });
    };
    Structure.prototype.getDescendantBaseStructures = function () {
        return utils_1.ArrayUtils.from(getDescendantBaseStructures(this));
        function getDescendantBaseStructures(structure) {
            var baseStructures, baseStructures_1, baseStructures_1_1, baseStructure, e_1_1, e_1, _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        baseStructures = structure.getBaseStructures();
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 7, 8, 9]);
                        baseStructures_1 = __values(baseStructures), baseStructures_1_1 = baseStructures_1.next();
                        _b.label = 2;
                    case 2:
                        if (!!baseStructures_1_1.done) return [3 /*break*/, 6];
                        baseStructure = baseStructures_1_1.value;
                        return [4 /*yield*/, baseStructure];
                    case 3:
                        _b.sent();
                        return [5 /*yield**/, __values(getDescendantBaseStructures(baseStructure))];
                    case 4:
                        _b.sent();
                        _b.label = 5;
                    case 5:
                        baseStructures_1_1 = baseStructures_1.next();
                        return [3 /*break*/, 2];
                    case 6: return [3 /*break*/, 9];
                    case 7:
                        e_1_1 = _b.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 9];
                    case 8:
                        try {
                            if (baseStructures_1_1 && !baseStructures_1_1.done && (_a = baseStructures_1.return)) _a.call(baseStructures_1);
                        }
                        finally { if (e_1) throw e_1.error; }
                        return [7 /*endfinally*/];
                    case 9: return [2 /*return*/];
                }
            });
        }
    };
    __decorate([
        utils_1.Memoize
    ], Structure.prototype, "getBaseStructures", null);
    __decorate([
        utils_1.Memoize
    ], Structure.prototype, "getDescendantBaseStructures", null);
    return Structure;
}());
exports.Structure = Structure;
