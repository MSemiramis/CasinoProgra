import { ts, CompilerOptions } from "../../typescript";
import { Diagnostic } from "../../compiler";
import { FileSystemWrapper } from "../../fileSystem";
export interface TsConfigParseResult {
    config?: any;
    error?: ts.Diagnostic;
}
export interface TsConfigParseOptions {
    tsConfigFilePath: string;
    encoding: string;
    fileSystemWrapper: FileSystemWrapper;
}
export declare function getTsConfigParseResult(opts: TsConfigParseOptions): TsConfigParseResult;
export interface CompilerOptionsFromTsConfigParseResultOptions {
    tsConfigFilePath: string;
    fileSystemWrapper: FileSystemWrapper;
    tsConfigParseResult: TsConfigParseResult;
}
export declare function getCompilerOptionsFromTsConfigParseResult(opts: CompilerOptionsFromTsConfigParseResultOptions): {
    options: CompilerOptions;
    errors: Diagnostic[];
};
export interface FilePathsFromTsConfigParseResultOptions {
    tsConfigFilePath: string;
    encoding: string;
    fileSystemWrapper: FileSystemWrapper;
    tsConfigParseResult: TsConfigParseResult;
    compilerOptions: CompilerOptions;
}
export declare function getFilePathsFromTsConfigParseResult(opts: FilePathsFromTsConfigParseResultOptions): string[];
