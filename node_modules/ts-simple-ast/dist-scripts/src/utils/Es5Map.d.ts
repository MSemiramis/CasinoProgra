export interface Dictionary<K, V> {
    readonly size: number;
    get(key: K): V | undefined;
    set(key: K, value: V): void;
    has(key: K): boolean;
    delete(key: K): void;
    entries(): IterableIterator<[K, V]>;
    keys(): IterableIterator<K>;
    values(): IterableIterator<V>;
}
export declare class Es5Map<K, V> implements Dictionary<K, V> {
    private readonly propSaver;
    private readonly items;
    private itemCount;
    readonly size: number;
    set(key: K, value: V): void;
    get(key: K): V | undefined;
    has(key: K): boolean;
    delete(key: K): void;
    entries(): IterableIterator<[K, V]>;
    keys(): IterableIterator<K>;
    values(): IterableIterator<V>;
    private getIdentifier(key);
    private createIdentifier(key);
}
