"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var typescript_1 = require("../../../typescript");
var testHelpers_1 = require("../testHelpers");
function getBreakStatement(text) {
    return testHelpers_1.getInfoFromTextWithDescendant(text, typescript_1.SyntaxKind.BreakStatement).descendant;
}
describe("BreakStatement", function () {
    var label = "foo";
    var statement = "break " + label + ";";
    var emptyStatement = "break;";
    describe("getLabel", function () {
        function doTest(text, expectedText) {
            var breakStatement = getBreakStatement(text);
            var value = breakStatement.getLabel();
            chai_1.expect(value == null ? value : value.getText()).to.equal(expectedText);
        }
        it("should get the correct label", function () {
            doTest(statement, label);
        });
        it("should get the correct undefined label", function () {
            doTest(emptyStatement, undefined);
        });
    });
    describe("getLabelOrThrow", function () {
        function doTest(text, expectedText) {
            var breakStatement = getBreakStatement(text);
            if (expectedText == null) {
                chai_1.expect(function () { return breakStatement.getLabelOrThrow(); }).to.throw();
            }
            else {
                chai_1.expect(breakStatement.getLabelOrThrow().getText()).to.equal(expectedText);
            }
        }
        it("should get the correct label", function () {
            doTest(statement, label);
        });
        it("should throw if label does not exist", function () {
            doTest(emptyStatement, undefined);
        });
    });
});
