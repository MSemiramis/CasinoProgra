"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var typescript_1 = require("../../../typescript");
var testHelpers_1 = require("../testHelpers");
function getInfo(text) {
    return testHelpers_1.getInfoFromTextWithDescendant(text, typescript_1.SyntaxKind.JsxFragment, { isJsx: true });
}
describe("JsxFragment", function () {
    describe("getOpeningFragment", function () {
        function doTest(text, expected) {
            var descendant = getInfo(text).descendant;
            chai_1.expect(descendant.getOpeningFragment().getText()).to.equal(expected);
        }
        it("should get the opening fragment", function () {
            doTest("var t = (<></>);", "<>");
        });
    });
    describe("getClosingFragment", function () {
        function doTest(text, expected) {
            var descendant = getInfo(text).descendant;
            chai_1.expect(descendant.getClosingFragment().getText()).to.equal(expected);
        }
        it("should get the closing fragment", function () {
            doTest("var t = (<></>);", "</>");
        });
    });
    describe("getJsxChildren", function () {
        function doTest(text, expected) {
            var descendant = getInfo(text).descendant;
            chai_1.expect(descendant.getJsxChildren().map(function (c) { return c.getText(); })).to.deep.equal(expected);
        }
        it("should get the children", function () {
            doTest("var t = (<>\n    <Child1 />\n    <Child2 />\n</>);", ["", "<Child1 />", "", "<Child2 />", ""]);
        });
    });
});
