"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var typescript_1 = require("../../../typescript");
var testHelpers_1 = require("../testHelpers");
function getInfo(text) {
    return testHelpers_1.getInfoFromTextWithDescendant(text, typescript_1.SyntaxKind.JsxSpreadAttribute, { isJsx: true });
}
function getInfoForSelfClosingElement(text) {
    return testHelpers_1.getInfoFromTextWithDescendant(text, typescript_1.SyntaxKind.JsxSelfClosingElement, { isJsx: true });
}
describe("JsxSpreadAttribute", function () {
    describe("getExpression", function () {
        function doTest(text, expected) {
            var descendant = getInfo(text).descendant;
            chai_1.expect(descendant.getExpression().getText()).to.equal(expected);
        }
        it("should get the expression", function () {
            doTest("var t = (<jsx {...test} />);", "test");
        });
    });
    describe("remove", function () {
        function doTest(text, index, expected) {
            var _a = getInfoForSelfClosingElement(text), descendant = _a.descendant, sourceFile = _a.sourceFile;
            descendant.getAttributes()[index].remove();
            chai_1.expect(sourceFile.getFullText()).to.equal(expected);
        }
        it("should remove the only attribute", function () {
            doTest("var t = (<jsx {...attribute} />);", 0, "var t = (<jsx />);");
        });
        it("should remove the attribute at the start", function () {
            doTest("var t = (<jsx {...attribute} a2 />);", 0, "var t = (<jsx a2 />);");
        });
        it("should remove the attribute in the middle", function () {
            doTest("var t = (<jsx a1 {...a2} a3 />);", 1, "var t = (<jsx a1 a3 />);");
        });
        it("should remove the attribute at the end", function () {
            doTest("var t = (<jsx {...a1} {...a2} />);", 1, "var t = (<jsx {...a1} />);");
        });
        it("should remove the attribute at the end when on a new line", function () {
            doTest("var t = (<jsx a1\n    {...a2} />);", 1, "var t = (<jsx a1 />);");
        });
    });
});
