"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var typescript_1 = require("../../../typescript");
var testHelpers_1 = require("../testHelpers");
describe("CallExpression", function () {
    describe("getReturnType", function () {
        function doTest(text, expectedTypes) {
            var sourceFile = testHelpers_1.getInfoFromText(text).sourceFile;
            var callExpressions = sourceFile.getDescendantsOfKind(typescript_1.SyntaxKind.CallExpression);
            chai_1.expect(callExpressions.map(function (c) { return c.getReturnType().getText(); })).to.deep.equal(expectedTypes);
        }
        it("should get the call expression's return type", function () {
            doTest("const func = () => ''; const myVar = func();", ["string"]);
        });
        it("should get the call expression's return type when void", function () {
            doTest("const func = () => {}; const myVar = func();", ["void"]);
        });
        it("should get the call expression's return type when chained", function () {
            doTest("const func = () => () => 4; const myVar = func()();", ["number", "() => number"]);
        });
    });
});
