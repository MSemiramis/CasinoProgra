"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var typescript_1 = require("../../../typescript");
var testHelpers_1 = require("../testHelpers");
function getBinaryExpression(text) {
    return testHelpers_1.getInfoFromTextWithDescendant(text, typescript_1.SyntaxKind.BinaryExpression).descendant;
}
describe("BinaryExpression", function () {
    describe("getLeft", function () {
        function doTest(text, expectedText) {
            var expression = getBinaryExpression(text);
            chai_1.expect(expression.getLeft().getText()).to.equal(expectedText);
        }
        it("should get the correct left side", function () {
            doTest("var t = 1 ^ 2;", "1");
        });
    });
    describe("getOperatorToken", function () {
        function doTest(text, expectedText) {
            var expression = getBinaryExpression(text);
            chai_1.expect(expression.getOperatorToken().getText()).to.equal(expectedText);
        }
        it("should get the correct operator token", function () {
            doTest("var t = 1 ^ 2;", "^");
        });
    });
    describe("getRight", function () {
        function doTest(text, expectedText) {
            var expression = getBinaryExpression(text);
            chai_1.expect(expression.getRight().getText()).to.equal(expectedText);
        }
        it("should get the correct right side", function () {
            doTest("var t = 1 ^ 2;", "2");
        });
    });
});
