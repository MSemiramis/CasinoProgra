"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var typescript_1 = require("../../../typescript");
var testHelpers_1 = require("../testHelpers");
function getInfoFromTextWithExpression(text) {
    var info = testHelpers_1.getInfoFromTextWithDescendant(text, typescript_1.SyntaxKind.ArrowFunction);
    return __assign({}, info, { expression: info.descendant });
}
describe("ArrowFunction", function () {
    describe("getEqualsGreaterThan", function () {
        function doTest(text, expectedText) {
            var expression = getInfoFromTextWithExpression(text).expression;
            chai_1.expect(expression.getEqualsGreaterThan().getText()).to.equal(expectedText);
        }
        it("should get the correct equals greater than token", function () {
            doTest("(x) => {}", "=>");
        });
    });
});
