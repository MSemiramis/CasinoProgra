"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var testHelpers_1 = require("../testHelpers");
describe("BodiedNode", function () {
    describe("setBodyText", function () {
        function doTest(startCode, newText, expectedCode) {
            var _a = testHelpers_1.getInfoFromText(startCode), firstChild = _a.firstChild, sourceFile = _a.sourceFile;
            firstChild.setBodyText(newText);
            chai_1.expect(sourceFile.getFullText()).to.equal(expectedCode);
        }
        function doWriterTest(startCode, writerFunc, expectedCode) {
            var _a = testHelpers_1.getInfoFromText(startCode), firstChild = _a.firstChild, sourceFile = _a.sourceFile;
            firstChild.setBodyText(writerFunc);
            chai_1.expect(sourceFile.getFullText()).to.equal(expectedCode);
        }
        // most of these tests are in bodyableNodeTests
        it("should set the body text", function () {
            doTest("namespace identifier {}", "var myVar;", "namespace identifier {\n    var myVar;\n}");
        });
        it("should set the body text when using a writer", function () {
            doWriterTest("namespace identifier {}", function (writer) { return writer.writeLine("test;").write("asdf;"); }, "namespace identifier {\n    test;\n    asdf;\n}");
        });
    });
    describe("fill", function () {
        function doTest(startCode, structure, expectedCode) {
            var _a = testHelpers_1.getInfoFromText(startCode), firstChild = _a.firstChild, sourceFile = _a.sourceFile;
            firstChild.fill(structure);
            chai_1.expect(firstChild.getText()).to.equal(expectedCode);
        }
        it("should set the text when using a string", function () {
            doTest("namespace identifier {\n}", { bodyText: "var myVar;" }, "namespace identifier {\n    var myVar;\n}");
        });
        it("should set the text when using a writer", function () {
            doTest("namespace identifier {\n}", { bodyText: function (writer) { return writer.writeLine("var myVar;"); } }, "namespace identifier {\n    var myVar;\n}");
        });
    });
});
