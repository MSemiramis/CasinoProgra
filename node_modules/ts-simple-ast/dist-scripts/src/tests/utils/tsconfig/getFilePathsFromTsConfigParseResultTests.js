"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var fileSystem_1 = require("../../../fileSystem");
var utils_1 = require("../../../utils");
describe("getFilePathsFromTsConfigParseResult", function () {
    function getFilePaths(fileSystem) {
        var fileSystemWrapper = new fileSystem_1.FileSystemWrapper(fileSystem);
        var tsConfigParseResult = utils_1.getTsConfigParseResult({
            tsConfigFilePath: "tsconfig.json",
            encoding: "utf-8",
            fileSystemWrapper: fileSystemWrapper
        });
        var compilerOptions = utils_1.getCompilerOptionsFromTsConfigParseResult({
            tsConfigFilePath: "tsconfig.json",
            fileSystemWrapper: fileSystemWrapper,
            tsConfigParseResult: tsConfigParseResult
        });
        return utils_1.getFilePathsFromTsConfigParseResult({
            tsConfigFilePath: "tsconfig.json",
            encoding: "utf-8",
            fileSystemWrapper: fileSystemWrapper,
            tsConfigParseResult: tsConfigParseResult,
            compilerOptions: compilerOptions.options
        });
    }
    function doTest(fileSystem, expectedPaths) {
        chai_1.expect(getFilePaths(fileSystem).sort()).to.deep.equal(expectedPaths.sort());
    }
    it("should get the file paths when there are none", function () {
        var fs = new fileSystem_1.VirtualFileSystemHost();
        fs.writeFileSync("tsconfig.json", "{ \"compilerOptions\": { \"rootDir\": \"test\", \"target\": \"ES5\" } }");
        doTest(fs, []);
    });
    it("should add the files from tsconfig.json, but exclude the outDir", function () {
        var fs = new fileSystem_1.VirtualFileSystemHost();
        fs.writeFileSync("tsconfig.json", "{ \"compilerOptions\": { \"outDir\": \"test2\" } }");
        fs.writeFileSync("/otherFile.ts", "");
        fs.writeFileSync("/test/file.ts", "");
        fs.writeFileSync("/test2/file2.ts", "");
        doTest(fs, ["/otherFile.ts", "/test/file.ts"]);
    });
    it("should add the files from tsconfig.json, but exclude the specified exclude", function () {
        var fs = new fileSystem_1.VirtualFileSystemHost();
        fs.writeFileSync("tsconfig.json", "{ \"exclude\": [\"test2\"] }");
        fs.writeFileSync("/otherFile.ts", "");
        fs.writeFileSync("/test/file.ts", "");
        fs.writeFileSync("/test2/file2.ts", "");
        doTest(fs, ["/otherFile.ts", "/test/file.ts"]);
    });
    it("should add the files from tsconfig.json, but only include the specified include", function () {
        var fs = new fileSystem_1.VirtualFileSystemHost();
        fs.writeFileSync("tsconfig.json", "{ \"include\": [\"test2\"] }");
        fs.writeFileSync("/otherFile.ts", "");
        fs.writeFileSync("/test/file.ts", "");
        fs.writeFileSync("/test2/file2.ts", "");
        doTest(fs, ["/test2/file2.ts"]);
    });
    it("should add the files from tsconfig.json when using rootDir", function () {
        var fs = new fileSystem_1.VirtualFileSystemHost();
        fs.writeFileSync("tsconfig.json", "{ \"compilerOptions\": { \"rootDir\": \"test\" } }");
        fs.writeFileSync("/otherFile.ts", "");
        fs.writeFileSync("/test/file.ts", "");
        fs.writeFileSync("/test/test2/file2.ts", "");
        doTest(fs, ["/test/file.ts", "/test/test2/file2.ts"]);
    });
    it("should add the files from tsconfig.json when using rootDirs", function () {
        var fs = new fileSystem_1.VirtualFileSystemHost();
        fs.writeFileSync("tsconfig.json", "{ \"compilerOptions\": { \"rootDirs\": [\"/test/test1\", \"/test/test2\"] } }");
        fs.writeFileSync("/test/file.ts", "");
        fs.writeFileSync("/test/test1/file1.ts", "");
        fs.writeFileSync("/test/test2/file2.ts", "");
        doTest(fs, ["/test/test1/file1.ts", "/test/test2/file2.ts"]);
    });
    it("should add the files from tsconfig.json when using rootDir and rootDirs", function () {
        var fs = new fileSystem_1.VirtualFileSystemHost();
        fs.writeFileSync("tsconfig.json", "{ \"compilerOptions\": { \"rootDir\": \"/test/test1\", \"rootDirs\": [\"/test/test2\"] } }");
        fs.writeFileSync("/test/file.ts", "");
        fs.writeFileSync("/test/test1/file1.ts", "");
        fs.writeFileSync("/test/test2/file2.ts", "");
        doTest(fs, ["/test/test1/file1.ts", "/test/test2/file2.ts"]);
    });
});
