"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var main_1 = require("../../../main");
var textChecks_1 = require("../../../manipulation/textChecks");
describe("isBlankLineAtPos", function () {
    function doTest(fileText, pos, expected) {
        var project = new main_1.default();
        var sourceFile = project.createSourceFile("file.ts", fileText);
        chai_1.expect(textChecks_1.isBlankLineAtPos(sourceFile, pos)).to.equal(expected);
    }
    it("should be a blank line when is one and uses \\r\\n", function () {
        var code = "text";
        var pos = code.length;
        code += "\r\n    \t   \t \r\nother";
        doTest(code, pos, true);
    });
    it("should be a blank line when is one and uses \\n", function () {
        var code = "text";
        var pos = code.length;
        code += "\n    \t   \t \nother";
        doTest(code, pos, true);
    });
    it("should not be a blank line when only one new line", function () {
        var code = "text";
        var pos = code.length;
        code += "\n    \t   \t test";
        doTest(code, pos, false);
    });
    it("should not be a blank line when only one new line and end of file", function () {
        var code = "text";
        var pos = code.length;
        code += "\n";
        doTest(code, pos, false);
    });
    it("should not be a blank line when no new line", function () {
        var code = "text";
        var pos = code.length;
        code += "more text";
        doTest(code, pos, false);
    });
});
