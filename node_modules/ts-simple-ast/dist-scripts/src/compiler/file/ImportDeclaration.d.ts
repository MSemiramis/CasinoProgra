import { ts } from "../../typescript";
import { ImportSpecifierStructure } from "../../structures";
import { Identifier } from "../common";
import { Statement } from "../statement";
import { ImportSpecifier } from "./ImportSpecifier";
import { SourceFile } from "./SourceFile";
export declare class ImportDeclaration extends Statement<ts.ImportDeclaration> {
    /**
     * Sets the import specifier.
     * @param text - Text to set as the module specifier.
     */
    setModuleSpecifier(text: string): this;
    /**
     * Sets the import specifier.
     * @param sourceFile - Source file to set the module specifier from.
     */
    setModuleSpecifier(sourceFile: SourceFile): this;
    /**
     * Gets the module specifier.
     */
    getModuleSpecifier(): string;
    /**
     * Gets the source file referenced in the module specifier or throws if it can't find it.
     */
    getModuleSpecifierSourceFileOrThrow(): SourceFile;
    /**
     * Gets the source file referenced in the module specifier or returns undefined if it can't find it.
     */
    getModuleSpecifierSourceFile(): SourceFile | undefined;
    /**
     * Gets if the module specifier starts with `./` or `../`.
     */
    isModuleSpecifierRelative(): boolean;
    /**
     * Sets the default import.
     * @param text - Text to set as the default import.
     */
    setDefaultImport(text: string): this;
    /**
     * Gets the default import, if it exists.
     */
    getDefaultImport(): Identifier | undefined;
    /**
     * Sets the namespace import.
     * @param text - Text to set as the namespace import.
     * @throws - InvalidOperationError if a named import exists.
     */
    setNamespaceImport(text: string): this;
    /**
     * Gets the namespace import, if it exists.
     */
    getNamespaceImport(): Identifier | undefined;
    /**
     * Adds a named import.
     * @param structure - Structure that represents the named import.
     */
    addNamedImport(structure: ImportSpecifierStructure): ImportSpecifier;
    /**
     * Adds a named import.
     * @param name - Name of the named import.
     */
    addNamedImport(name: string): ImportSpecifier;
    /**
     * Adds named imports.
     * @param structuresOrNames - Structures or names that represent the named imports.
     */
    addNamedImports(structuresOrNames: (ImportSpecifierStructure | string)[]): ImportSpecifier[];
    /**
     * Inserts a named import.
     * @param index - Index to insert at.
     * @param structure - Structure that represents the named import.
     */
    insertNamedImport(index: number, structure: ImportSpecifierStructure): ImportSpecifier;
    /**
     * Inserts a named import.
     * @param index - Index to insert at.
     * @param name - Name of the named import.
     */
    insertNamedImport(index: number, name: string): ImportSpecifier;
    /**
     * Inserts named imports into the import declaration.
     * @param index - Index to insert at.
     * @param structuresOrNames - Structures or names that represent the named imports.
     */
    insertNamedImports(index: number, structuresOrNames: (ImportSpecifierStructure | string)[]): ImportSpecifier[];
    /**
     * Gets the named imports.
     */
    getNamedImports(): ImportSpecifier[];
    /**
     * Removes all the named imports.
     */
    removeNamedImports(): this;
    private getImportClause();
}
