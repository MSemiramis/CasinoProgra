import { ts } from "../../typescript";
import { Node } from "../common";
import { Expression } from "../expression";
import { SourceFile } from "./SourceFile";
export declare class ExternalModuleReference extends Node<ts.ExternalModuleReference> {
    /**
     * Gets the expression or undefined of the yield expression.
     */
    getExpression(): Expression<ts.Expression> | undefined;
    /**
     * Gets the expression of the yield expression or throws if it does not exist.
     */
    getExpressionOrThrow(): Expression<ts.Expression>;
    /**
     * Gets the source file referenced or throws if it can't find it.
     */
    getReferencedSourceFileOrThrow(): SourceFile;
    /**
     * Gets if the external module reference is relative.
     */
    isRelative(): boolean;
    /**
     * Gets the source file referenced or returns undefined if it can't find it.
     */
    getReferencedSourceFile(): SourceFile | undefined;
}
