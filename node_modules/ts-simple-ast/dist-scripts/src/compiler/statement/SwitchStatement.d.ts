import { ts } from "../../typescript";
import { Expression } from "../expression";
import { ChildOrderableNode } from "../base";
import { Statement } from "./Statement";
import { CaseBlock } from "./CaseBlock";
import { CaseOrDefaultClause } from "../aliases";
export declare const SwitchStatementBase: (new (...args: any[]) => ChildOrderableNode) & typeof Statement;
export declare class SwitchStatement extends SwitchStatementBase<ts.SwitchStatement> {
    /**
     * Gets this switch statement's expression.
     */
    getExpression(): Expression<ts.Expression>;
    /**
     * Gets this switch statement's case block.
     */
    getCaseBlock(): CaseBlock;
    /**
     * Gets the switch statement's case block's clauses.
     */
    getClauses(): CaseOrDefaultClause[];
    /**
     * Removes the specified clause based on the provided index.
     * @param index - Index.
     */
    removeClause(index: number): CaseBlock;
    /**
     * Removes the specified clauses based on the provided index range.
     * @param indexRange - Index range.
     */
    removeClauses(indexRange: [number, number]): CaseBlock;
}
