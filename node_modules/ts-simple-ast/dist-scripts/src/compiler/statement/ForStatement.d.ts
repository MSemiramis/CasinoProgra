import { ts } from "../../typescript";
import { Expression } from "../expression";
import { IterationStatement } from "./IterationStatement";
import { VariableDeclarationList } from "./VariableDeclarationList";
export declare const ForStatementBase: typeof IterationStatement;
export declare class ForStatement extends ForStatementBase<ts.ForStatement> {
    /**
     * Gets this for statement's initializer or undefined if none exists.
     */
    getInitializer(): Expression<ts.Expression> | VariableDeclarationList | undefined;
    /**
     * Gets this for statement's initializer or throws if none exists.
     */
    getInitializerOrThrow(): Expression<ts.Expression> | VariableDeclarationList;
    /**
     * Gets this for statement's condition or undefined if none exists.
     */
    getCondition(): Expression<ts.Expression> | undefined;
    /**
     * Gets this for statement's condition or throws if none exists.
     */
    getConditionOrThrow(): Expression<ts.Expression>;
    /**
     * Gets this for statement's incrementor.
     */
    getIncrementor(): Expression<ts.Expression> | undefined;
    /**
     * Gets this for statement's incrementor or throws if none exists.
     */
    getIncrementorOrThrow(): Expression<ts.Expression>;
}
