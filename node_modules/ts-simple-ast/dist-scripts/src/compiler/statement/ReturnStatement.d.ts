import { ts } from "../../typescript";
import { Expression } from "../expression";
import { ChildOrderableNode } from "../base";
import { Statement } from "./Statement";
export declare const ReturnStatementBase: (new (...args: any[]) => ChildOrderableNode) & typeof Statement;
export declare class ReturnStatement extends ReturnStatementBase<ts.ReturnStatement> {
    /**
     * Gets this return statement's expression if it exists or throws.
     */
    getExpressionOrThrow(): Expression<ts.Expression>;
    /**
     * Gets this return statement's expression if it exists.
     */
    getExpression(): Expression<ts.Expression> | undefined;
}
