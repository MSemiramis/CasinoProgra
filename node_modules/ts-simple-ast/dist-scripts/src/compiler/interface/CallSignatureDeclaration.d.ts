import { ts } from "../../typescript";
import { CallSignatureDeclarationStructure } from "../../structures";
import { JSDocableNode, ChildOrderableNode, TypeParameteredNode, SignaturedDeclaration } from "../base";
import { TypeElement } from "./TypeElement";
export declare const CallSignatureDeclarationBase: (new (...args: any[]) => TypeParameteredNode) & (new (...args: any[]) => ChildOrderableNode) & (new (...args: any[]) => JSDocableNode) & (new (...args: any[]) => SignaturedDeclaration) & typeof TypeElement;
export declare class CallSignatureDeclaration extends CallSignatureDeclarationBase<ts.CallSignatureDeclaration> {
    /**
     * Fills the node from a structure.
     * @param structure - Structure to fill.
     */
    fill(structure: Partial<CallSignatureDeclarationStructure>): this;
    /**
     * Removes this call signature.
     */
    remove(): void;
}
