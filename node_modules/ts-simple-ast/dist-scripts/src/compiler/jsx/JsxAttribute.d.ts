import { ts } from "../../typescript";
import { NamedNode } from "../base";
import { Node } from "../common";
import { StringLiteral } from "../literal";
import { JsxExpression } from "./JsxExpression";
declare const JsxAttribute_base: (new (...args: any[]) => NamedNode) & typeof Node;
export declare class JsxAttribute extends JsxAttribute_base<ts.JsxAttribute> {
    /**
     * Gets the JSX attribute's initializer or throws if it doesn't exist.
     */
    getInitializerOrThrow(): StringLiteral | JsxExpression;
    /**
     * Gets the JSX attribute's initializer or returns undefined if it doesn't exist.
     */
    getInitializer(): StringLiteral | JsxExpression | undefined;
    /**
     * Removes the JSX attribute.
     */
    remove(): void;
}
