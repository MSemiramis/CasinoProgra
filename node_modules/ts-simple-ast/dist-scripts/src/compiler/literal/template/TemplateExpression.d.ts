import { ts } from "../../../typescript";
import { PrimaryExpression } from "../../expression";
import { TemplateLiteral } from "../../aliases";
import { TemplateHead } from "./TemplateHead";
import { TemplateSpan } from "./TemplateSpan";
export declare const TemplateExpressionBase: typeof PrimaryExpression;
export declare class TemplateExpression extends TemplateExpressionBase<ts.TemplateExpression> {
    /**
     * Gets the template head.
     */
    getHead(): TemplateHead;
    /**
     * Gets the template spans.
     */
    getTemplateSpans(): TemplateSpan[];
    /**
     * Sets the literal value.
     *
     * Note: This could possibly replace the node if you remove all the tagged templates.
     * @param value - Value to set.
     * @returns The new node if the kind changed; the current node otherwise.
     */
    setLiteralValue(value: string): TemplateLiteral;
}
