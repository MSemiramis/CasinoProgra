import { Identifier, ComputedPropertyName, QualifiedName } from "./common";
import { PropertyAssignment, ShorthandPropertyAssignment, SpreadAssignment, PrimaryExpression, PropertyAccessExpression } from "./expression";
import { JsxAttribute, JsxSpreadAttribute, JsxText, JsxExpression, JsxElement, JsxSelfClosingElement, JsxFragment } from "./jsx";
import { PropertySignature, MethodSignature, ConstructSignatureDeclaration, CallSignatureDeclaration, IndexSignatureDeclaration } from "./interface";
import { ExternalModuleReference } from "./file";
import { CaseClause, DefaultClause } from "./statement";
import { GetAccessorDeclaration, SetAccessorDeclaration, MethodDeclaration } from "./class";
import { StringLiteral, NumericLiteral, TemplateExpression, NoSubstitutionTemplateLiteral } from "./literal";
export declare type PropertyName = Identifier | StringLiteral | NumericLiteral | ComputedPropertyName;
export declare type AccessorDeclaration = GetAccessorDeclaration | SetAccessorDeclaration;
export declare type EntityName = Identifier | QualifiedName;
export declare type JsxChild = JsxText | JsxExpression | JsxElement | JsxSelfClosingElement | JsxFragment;
export declare type JsxAttributeLike = JsxAttribute | JsxSpreadAttribute;
export declare type JsxTagNameExpression = PrimaryExpression | PropertyAccessExpression;
export declare type ObjectLiteralElementLike = PropertyAssignment | ShorthandPropertyAssignment | SpreadAssignment | MethodDeclaration | AccessorDeclaration;
export declare type CaseOrDefaultClause = CaseClause | DefaultClause;
export declare type ModuleReference = EntityName | ExternalModuleReference;
export declare type TypeElementTypes = PropertySignature | MethodSignature | ConstructSignatureDeclaration | CallSignatureDeclaration | IndexSignatureDeclaration;
export declare type TemplateLiteral = TemplateExpression | NoSubstitutionTemplateLiteral;
