import { ts } from "../../../typescript";
import { Constructor } from "../../../Constructor";
import { Expression } from "../Expression";
import { Node } from "../../common";
export declare type ExpressionedNodeExtensionType = Node<ts.Node & {
    expression: ts.Expression;
}>;
export interface ExpressionedNode {
    /**
     * Gets the expression.
     */
    getExpression(): Expression;
}
export declare function ExpressionedNode<T extends Constructor<ExpressionedNodeExtensionType>>(Base: T): Constructor<ExpressionedNode> & T;
