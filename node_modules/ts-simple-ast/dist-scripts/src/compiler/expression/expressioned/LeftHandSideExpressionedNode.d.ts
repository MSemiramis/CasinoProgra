import { ts } from "../../../typescript";
import { Constructor } from "../../../Constructor";
import { LeftHandSideExpression } from "../LeftHandSideExpression";
import { Node } from "../../common";
export declare type LeftHandSideExpressionedNodeExtensionType = Node<ts.Node & {
    expression: ts.LeftHandSideExpression;
}>;
export interface LeftHandSideExpressionedNode {
    /**
     * Gets the expression.
     */
    getExpression(): LeftHandSideExpression;
}
export declare function LeftHandSideExpressionedNode<T extends Constructor<LeftHandSideExpressionedNodeExtensionType>>(Base: T): Constructor<LeftHandSideExpressionedNode> & T;
