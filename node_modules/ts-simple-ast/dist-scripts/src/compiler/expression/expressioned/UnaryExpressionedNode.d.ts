import { ts } from "../../../typescript";
import { Constructor } from "../../../Constructor";
import { UnaryExpression } from "../UnaryExpression";
import { Node } from "../../common";
export declare type UnaryExpressionedNodeExtensionType = Node<ts.Node & {
    expression: ts.UnaryExpression;
}>;
export interface UnaryExpressionedNode {
    /**
     * Gets the expression.
     */
    getExpression(): UnaryExpression;
}
export declare function UnaryExpressionedNode<T extends Constructor<UnaryExpressionedNodeExtensionType>>(Base: T): Constructor<UnaryExpressionedNode> & T;
