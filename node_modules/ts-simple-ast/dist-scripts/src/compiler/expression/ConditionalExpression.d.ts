import { ts, SyntaxKind } from "../../typescript";
import { Node } from "../common";
import { Expression } from "./Expression";
export declare const ConditionalExpressionBase: typeof Expression;
export declare class ConditionalExpression extends ConditionalExpressionBase<ts.ConditionalExpression> {
    /**
     * Gets the condition of the conditional expression.
     */
    getCondition(): Expression<ts.Expression>;
    /**
     * Gets the question token of the conditional expression.
     */
    getQuestionToken(): Node<ts.Token<SyntaxKind.QuestionToken>>;
    /**
     * Gets the when true expression of the conditional expression.
     */
    getWhenTrue(): Expression<ts.Expression>;
    /**
     * Gets the colon token of the conditional expression.
     */
    getColonToken(): Node<ts.Token<SyntaxKind.ColonToken>>;
    /**
     * Gets the when false expression of the conditional expression.
     */
    getWhenFalse(): Expression<ts.Expression>;
}
