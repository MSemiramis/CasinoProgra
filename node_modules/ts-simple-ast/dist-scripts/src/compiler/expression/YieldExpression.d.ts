import { ts } from "../../typescript";
import { Expression } from "./Expression";
import { GeneratorableNode } from "../base";
export declare const YieldExpressionBase: (new (...args: any[]) => GeneratorableNode) & typeof Expression;
export declare class YieldExpression extends YieldExpressionBase<ts.YieldExpression> {
    /**
     * Gets the expression or undefined of the yield expression.
     */
    getExpression(): Expression<ts.Expression> | undefined;
    /**
     * Gets the expression of the yield expression or throws if it does not exist.
     */
    getExpressionOrThrow(): Expression<ts.Expression>;
}
