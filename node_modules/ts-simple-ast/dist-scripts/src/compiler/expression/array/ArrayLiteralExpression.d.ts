import { ts } from "../../../typescript";
import CodeBlockWriter from "code-block-writer";
import { Expression } from "../Expression";
import { PrimaryExpression } from "../PrimaryExpression";
export declare class ArrayLiteralExpression extends PrimaryExpression<ts.ArrayLiteralExpression> {
    /**
     * Gets the array's elements.
     */
    getElements(): Expression[];
    /**
     * Adds an element to the array.
     * @param text - Text to add as an element.
     * @param options - Options.
     */
    addElement(text: string, options?: {
        useNewLines?: boolean;
    }): Expression<ts.Expression>;
    /**
     * Adds elements to the array.
     * @param texts - Texts to add as elements.
     * @param options - Options.
     */
    addElements(texts: string[], options?: {
        useNewLines?: boolean;
    }): Expression<ts.Expression>[];
    /**
     * Insert an element into the array.
     * @param index - Index to insert at.
     * @param text - Text to insert as an element.
     * @param options - Options.
     */
    insertElement(index: number, text: string, options?: {
        useNewLines?: boolean;
    }): Expression<ts.Expression>;
    /**
     * Insert elements into the array.
     * @param index - Index to insert at.
     * @param texts - Texts to insert as elements.
     * @param options - Options.
     */
    insertElements(index: number, texts: string[], options?: {
        useNewLines?: boolean;
    }): Expression[];
    /**
     * Insert elements into the array.
     * @param index - Index to insert at.
     * @param writerFunction - Write the text using the provided writer.
     * @param options - Options.
     */
    insertElements(index: number, writerFunction: (writer: CodeBlockWriter) => void, options?: {
        useNewLines?: boolean;
    }): Expression[];
    /**
     * Removes an element from the array.
     * @param index - Index to remove from.
     */
    removeElement(index: number): void;
    /**
     * Removes an element from the array.
     * @param element - Element to remove.
     */
    removeElement(element: Expression): void;
}
